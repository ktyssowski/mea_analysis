function process_spk_file(spk_paths, output_path)
    %% process_spk_file(spk_paths, output_path)
    %
    % processes one or more 

    if ~exist('output_path', 'var')
        [spk_dir, spk_name] = fileparts(spk_paths{1});
        output_path = fullfile(spk_dir, [spk_name, '.mat']);
        disp(['Output path not specified! Saving to ', output_path])
    end

    axis_loader = AxisLoader(spk_paths);
    output_file = matfile(output_path, 'Writable', true);
    cell_shape = axis_loader.get_cell_shape();
    feat_cell = cell(cell_shape);
    model_cell = cell(cell_shape);
    clust_cell = cell(cell_shape);
    % This is how you have to preallocate object containers in matlab
    electrode_containers( ...
        cell_shape(1), ...
        cell_shape(2), ...
        cell_shape(3), ...
        cell_shape(4) ...
    ) = ElectrodeContainer();

    for i = 1:axis_loader.num_channels
        [spike_data, channel] = axis_loader.load_next_data_set();
        disp(['Num Spikes: ', num2str(length(spike_data))])
        spike_index = [... 
            channel.WellRow, ...
            channel.WellColumn, ...
            channel.ElectrodeColumn, ...
            channel.ElectrodeRow ...
        ];
        if length(spike_data) > 20 % Feature Extraction requires at least three spikes
            features = get_spike_features(spike_data);
            models = fit_models_to_features(features, 'pca');
            clusters = cellfun(@(m) m.cluster(features.pc_scores), models, 'UniformOutput', false);
            feat_cell{i} = features;
            model_cell{i} = models;
            clust_cell{i} = clusters;
            electrode_containers( ...
                channel.WellRow, ...
                channel.WellColumn, ...
                channel.ElectrodeColumn, ...
                channel.ElectrodeRow ...
            ) = ElectrodeContainer( ...
                spike_index, ...
                'features', features, ...
                'cluster_model', models, ...
                'class_no', clusters, ...
                'contains_data', true, ...
                'valid', true(size(clusters)) ...
            );
        else
            electrode_containers( ...
                channel.WellRow, ...
                channel.WellColumn, ...
                channel.ElectrodeColumn, ...
                channel.ElectrodeRow ...
            ) = ElectrodeContainer( ...
                spike_index, ...
                'contains_data', false, ...
                'valid', false ...
            );
        end
    end

    output_file.electrode_containers = electrode_containers;


function datasets = load_axis_datasets(filepaths)
    datasets = cell(size(filepaths));
    for i = 1:numel(filepaths)
        datasets{i} = AxisFile(filepaths{i}).DataSets.LoadData();
    end

function dts = spike_times_to_datetime(fst, spike_starts)
    %% dts = spike_times_to_datetime(file_start_time, spike_starts)
    %
    % 
    for i = 1:length(spike_starts)
        dts(i) = datetime( ...
            fst.Year, ...
            fst.Month, ...
            fst.Day, ...
            fst.Hour, ...
            fst.Minute, ...
            fst.Second + spike_starts(i) ...
        );
    end
